-- dbadmin с паролем dbadmin - администратор базы данных
-- user1 с паролем test - пользователь ис под которого работает движок

CREATE ROLE dbadmin WITH
  LOGIN
  NOSUPERUSER
  INHERIT
  CREATEDB
  CREATEROLE
  NOREPLICATION;

ALTER USER dbadmin WITH PASSWORD 'dbadmin';

CREATE ROLE test_users WITH
  NOLOGIN
  NOSUPERUSER
  INHERIT
  NOCREATEDB
  NOCREATEROLE
  NOREPLICATION;

CREATE ROLE user1 WITH
  LOGIN
  NOSUPERUSER
  INHERIT
  NOCREATEDB
  NOCREATEROLE
  NOREPLICATION;

ALTER USER user1 WITH PASSWORD 'test';

GRANT test_users TO user1;

CREATE DATABASE test
    WITH
    OWNER = dbadmin
    ENCODING = 'UTF8'
    LC_COLLATE = 'en_US.UTF-8'
    LC_CTYPE = 'en_US.UTF-8'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;

GRANT TEMPORARY, CONNECT ON DATABASE test TO PUBLIC;

GRANT TEMPORARY, CONNECT ON DATABASE test TO test_users;

GRANT ALL ON DATABASE test TO dbadmin;

ALTER DEFAULT PRIVILEGES
GRANT ALL ON TABLES TO dbadmin;

ALTER DEFAULT PRIVILEGES
GRANT INSERT, SELECT, UPDATE, DELETE ON TABLES TO test_users;

-- необходимо, для просмотра схемы базы данных в IDEA, выполнять надо от пользователя имеющего права на изменения схемы
-- например если строка GRANT ALL ON SCHEMA public TO postgres; - то выполнять надо из-под пользователя  postgres

GRANT USAGE ON SCHEMA public TO test_users;

-- создание последовательности

CREATE SEQUENCE public.table_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.table_id_seq
    OWNER TO dbadmin;

-- --------------------------------------------------------------------------------------------------------------------
-- создание таблиц
-- header_items

CREATE TABLE public.header_items
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    item_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    item_type character varying(80) COLLATE pg_catalog."default" NOT NULL,
    description character varying(80) COLLATE pg_catalog."default",
    parent_id bigint,
    href text COLLATE pg_catalog."default",
    items_order integer DEFAULT 999999,
    CONSTRAINT header_items_pkey PRIMARY KEY (id),
    CONSTRAINT header_items_item_name UNIQUE (item_name),
    CONSTRAINT header_items_parent_id_fkey FOREIGN KEY (parent_id)
        REFERENCES public.header_items (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.header_items
    OWNER to dbadmin;

GRANT ALL ON TABLE public.header_items TO dbadmin;

GRANT INSERT, SELECT, UPDATE, DELETE ON TABLE public.header_items TO test_users;

COMMENT ON TABLE public.header_items
    IS 'Элементы навигационной панели';

-- --------------------------------------------------------------------------------------------------------------------
-- создание таблиц
-- users_roles

CREATE TABLE public.users_roles
(
    id bigint NOT NULL DEFAULT nextval('table_id_seq'::regclass),
    role_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT id PRIMARY KEY (id),
    CONSTRAINT role_name UNIQUE (role_name)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.users_roles
    OWNER to dbadmin;

GRANT ALL ON TABLE public.users_roles TO dbadmin;

GRANT INSERT, SELECT, UPDATE, DELETE ON TABLE public.users_roles TO test_users;

COMMENT ON TABLE public.users_roles
    IS 'Роли пользователей вы программе';

-- --------------------------------------------------------------------------------------------------------------------
-- создание таблиц
-- header_items_authority

CREATE TABLE public.header_items_authority
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    header_item_id bigint NOT NULL,
    role_id bigint NOT NULL,
    CONSTRAINT header_items_authority_pkey PRIMARY KEY (id),
    CONSTRAINT header_items_authority_role_id_fkey FOREIGN KEY (role_id)
        REFERENCES public.users_roles (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT usrs_authority_user_id_fkey FOREIGN KEY (header_item_id)
        REFERENCES public.header_items (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.header_items_authority
    OWNER to dbadmin;

GRANT ALL ON TABLE public.header_items_authority TO dbadmin;

GRANT INSERT, SELECT, UPDATE, DELETE ON TABLE public.header_items_authority TO test_users;

COMMENT ON TABLE public.header_items_authority
    IS 'Назначение доступа для элементов меню';


-- --------------------------------------------------------------------------------------------------------------------
-- создание таблиц
-- usrs

CREATE TABLE public.usrs
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    pass_hash text COLLATE pg_catalog."default" NOT NULL,
    account_non_expired boolean,
    account_non_locked boolean,
    credentials_non_expired boolean,
    enabled boolean,
    user_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_display_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT usrs_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.usrs
    OWNER to dbadmin;

GRANT ALL ON TABLE public.usrs TO dbadmin;

GRANT INSERT, SELECT, UPDATE, DELETE ON TABLE public.usrs TO test_users;

COMMENT ON TABLE public.usrs
    IS 'Пользователи';

-- --------------------------------------------------------------------------------------------------------------------
-- создание таблиц
-- usrs_authority

CREATE TABLE public.usrs_authority
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id bigint NOT NULL,
    role_id bigint NOT NULL,
    CONSTRAINT usrs_authority_pkey PRIMARY KEY (id),
    CONSTRAINT usrs_authority_role_id_fkey FOREIGN KEY (role_id)
        REFERENCES public.users_roles (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT usrs_authority_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES public.usrs (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.usrs_authority
    OWNER to dbadmin;

GRANT ALL ON TABLE public.usrs_authority TO dbadmin;

GRANT INSERT, SELECT, UPDATE, DELETE ON TABLE public.usrs_authority TO test_users;

COMMENT ON TABLE public.usrs_authority
    IS 'Назначение ролей для пользователя';

-- --------------------------------------------------------------------------------------------------------------------
-- заполнение таблиц
-- Будет созданы: группы пользователей ROLE_USER, ROLE_ADMIN,
-- разметка меню для версии 0.0.1,
-- пользователь "1" с паролем "1" с группами ROLE_ADMIN, ROLE_USER
-- обращаю внимание, что запросы по вставке в таблицы usrs_authority и header_items_authority зависят от id значений вставленных ранее, и не
-- нуждаются в корректировке, только если вставка происходит в новые таблицы/таблицы со сброшенным счетчиком id

INSERT INTO public.usrs(
	pass_hash, account_non_expired, account_non_locked, credentials_non_expired, enabled, user_name, user_display_name)
	VALUES ('$2a$10$xer2wlhrlVqy3SXAT0sRCu13Gd.b0BR6XqlqCdqGntrp4YJ6yBlNu', true, true, true, true, '1', '1');

INSERT INTO public.users_roles(role_name)
	VALUES ('ROLE_USER');

INSERT INTO public.users_roles(role_name)
    	VALUES ('ROLE_ADMIN');

INSERT INTO public.usrs_authority(user_id, role_id)
	VALUES (1, 1);

INSERT INTO public.usrs_authority(user_id, role_id)
	VALUES (1, 2);

INSERT INTO public.header_items(
	item_name, item_type, description, parent_id, href, items_order)
	VALUES ('tasks', 'MENU', 'Главное', NULL, NULL, 1);

INSERT INTO public.header_items(
	item_name, item_type, description, parent_id, href, items_order)
	VALUES ('projects', 'MENU', 'Проекты', NULL, NULL, 2);

INSERT INTO public.header_items(
	item_name, item_type, description, parent_id, href, items_order)
	VALUES ('admin', 'ELEMENT', 'Администрирование', NULL, '/admin', 3);

INSERT INTO public.header_items(
	item_name, item_type, description, parent_id, href, items_order)
	VALUES ('tasks_el1', 'ELEMENT', 'Задачи подраздел 1', 1, NULL, 1);

INSERT INTO public.header_items(
	item_name, item_type, description, parent_id, href, items_order)
	VALUES ('tasks_el2', 'ELEMENT', 'Задачи подраздел 2', 1, NULL, 2);

INSERT INTO public.header_items(
	item_name, item_type, description, parent_id, href, items_order)
	VALUES ('projects_el1', 'ELEMENT', 'Проекты подраздел 1', 2, NULL, 1);

INSERT INTO public.header_items(
	item_name, item_type, description, parent_id, href, items_order)
	VALUES ('projects_el2', 'ELEMENT', 'Проекты подраздел 2', 2, NULL, 2);

INSERT INTO public.header_items(
	item_name, item_type, description, parent_id, href, items_order)
	VALUES ('dev1', 'DIVIDER', NULL, 1, NULL, 3);

INSERT INTO public.header_items(
	item_name, item_type, description, parent_id, href, items_order)
	VALUES ('logout', 'ELEMENT', 'Выход', 1, '/logout', 4);

INSERT INTO public.header_items(
	item_name, item_type, description, parent_id, href, items_order)
	VALUES ('login', 'ELEMENT', 'Вход', 1, '/login', 5);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (1, 1);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (2, 1);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (4, 1);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (5, 1);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (6, 1);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (7, 1);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (8, 1);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (9, 1);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (10, 1);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (1, 2);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (2, 2);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (3, 2);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (4, 2);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (5, 2);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (6, 2);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (7, 2);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (8, 2);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (9, 2);

INSERT INTO public.header_items_authority(
	 header_item_id, role_id)
	VALUES (10, 2);